[
  {
    "q_id": 1,
    "q_title": "What is an operating system?",
    "q_options": [
      "interface between the hardware and application programs",
      "collection of programs that manages hardware resources",
      "system service provider to the application programs",
      "all of the mentioned"
    ],
    "q_ans": "d",
    "q_explanation": "An Operating System acts as an intermediary between user/user applications/application programs and hardware. It is a program that manages hardware resources. It provides services to application programs."
  },
  {
    "q_id": 2,
    "q_title": "What is the main function of the command interpreter?",
    "q_options": [
      "to provide the interface between the API and application program",
      "to handle the files in the operating system",
      "to get and execute the next user-specified command",
      "none of the mentioned"
    ],
    "q_ans": "c",
    "q_explanation": "The main function of a command interpreter is to get and execute the next user-specified command. Command Interpreter checks for valid command and then runs that command else it will throw an error."
  },
  {
    "q_id": 3,
    "q_title": "In Operating Systems, which of the following is/are CPU scheduling algorithms?",
    "q_options": [
      "Priority",
      "Round Robin",
      "Shortest Job First",
      "All of the mentioned"
    ],
    "q_ans": "d",
    "q_explanation": "In Operating Systems, CPU scheduling algorithms include First Come First Served, Shortest Job First, Priority, Round Robin, Multilevel Queue, and Multilevel Feedback Queue scheduling."
  },
  {
    "q_id": 4,
    "q_title": "To access the services of the operating system, the interface is provided by the ___________",
    "q_options": [
      "Library",
      "System calls",
      "Assembly instructions",
      "API"
    ],
    "q_ans": "b",
    "q_explanation": "To access services of the Operating System an interface is provided by the System Calls. These are generally functions written in C and C++."
  },
  {
    "q_id": 5,
    "q_title": "CPU scheduling is the basis of ___________",
    "q_options": [
      "multiprogramming operating systems",
      "larger memory sized systems",
      "multiprocessor systems",
      "none of the mentioned"
    ],
    "q_ans": "a",
    "q_explanation": "CPU scheduling is the basis of multiprogramming operating systems."
  },
  {
    "q_id": 6,
    "q_title": "Which one of the following is not true?",
    "q_options": [
      "kernel remains in the memory during the entire computer session",
      "kernel is made of various modules which can not be loaded in running operating system",
      "kernel is the first part of the operating system to load into memory during booting",
      "kernel is the program that constitutes the central core of the operating system"
    ],
    "q_ans": "b",
    "q_explanation": "Kernel modules can be loaded and unloaded at runtime in a running OS."
  },
  {
    "q_id": 7,
    "q_title": "Which one of the following errors will be handle by the operating system?",
    "q_options": [
      "lack of paper in printer",
      "connection failure in the network",
      "power failure",
      "all of the mentioned"
    ],
    "q_ans": "d",
    "q_explanation": "All the mentioned errors are handled by OS. It constantly monitors resources and detects/corrects errors."
  },
  {
    "q_id": 8,
    "q_title": "Where is the operating system placed in the memory?",
    "q_options": [
      "either low or high memory (depending on the location of interrupt vector)",
      "in the low memory",
      "in the high memory",
      "none of the mentioned"
    ],
    "q_ans": "a",
    "q_explanation": "The OS can be placed in either low or high memory depending on the location of the interrupt vector."
  },
  {
    "q_id": 9,
    "q_title": "If a process fails, most operating system write the error information to a ______",
    "q_options": [
      "new file",
      "another running process",
      "log file",
      "none of the mentioned"
    ],
    "q_ans": "c",
    "q_explanation": "If a process fails, most OS write the error information to a log file for debugging."
  },
  {
    "q_id": 10,
    "q_title": "Which one of the following is not a real time operating system?",
    "q_options": [
      "RTLinux",
      "Palm OS",
      "QNX",
      "VxWorks"
    ],
    "q_ans": "b",
    "q_explanation": "Palm OS is a mobile OS for PDAs, not a real-time OS."
  },
  {
    "q_id": 11,
    "q_title": "What does OS X has?",
    "q_options": [
      "monolithic kernel with modules",
      "microkernel",
      "monolithic kernel",
      "hybrid kernel"
    ],
    "q_ans": "d",
    "q_explanation": "OS X has a hybrid kernel. Hybrid kernel is a combination of two different kernels. OS X is developed by Apple and originally it is known as Mac OS X."
  },
  {
    "q_id": 12,
    "q_title": "In operating system, each process has its own __________",
    "q_options": [
      "open files",
      "pending alarms, signals, and signal handlers",
      "address space and global variables",
      "all of the mentioned"
    ],
    "q_ans": "d",
    "q_explanation": "In Operating Systems, each process has its own address space which contains code, data, stack, and heap segments or sections. Each process also has a list of files that is opened by the process as well as all pending alarms, signals, and various signal handlers."
  },
  {
    "q_id": 13,
    "q_title": "In a timeshare operating system, when the time slot assigned to a process is completed, the process switches from the current state to?",
    "q_options": [
      "Suspended state",
      "Terminated state",
      "Ready state",
      "Blocked state"
    ],
    "q_ans": "c",
    "q_explanation": "In a time-sharing operating system, when the time slot given to a process is completed, the process goes from the running state to the Ready State. In a time-sharing operating system, unit time is defined for sharing CPU, it is called a time quantum or time slice. If a process takes less than 1 time quantum, then the process itself releases the CPU."
  },
  {
    "q_id": 14,
    "q_title": "Cascading termination refers to the termination of all child processes if the parent process terminates ______",
    "q_options": [
      "Normally or abnormally",
      "Abnormally",
      "Normally",
      "None of the mentioned"
    ],
    "q_ans": "a",
    "q_explanation": "Cascading termination refers to the termination of all child processes if the parent process terminates Normally or Abnormally. Some systems don’t allow child processes to exist if the parent process has terminated. Cascading termination is normally initiated by the operating system."
  },
  {
    "q_id": 15,
    "q_title": "When a process is in a “Blocked” state waiting for some I/O service. When the service is completed, it goes to the __________",
    "q_options": [
      "Terminated state",
      "Suspended state",
      "Running state",
      "Ready state"
    ],
    "q_ans": "d",
    "q_explanation": "Suppose that a process is in “Blocked” state waiting for some I/O service. When the service is completed, it goes to the ready state. Process never goes directly to the running state from the waiting state. Only processes which are in ready state go to the running state whenever CPU allocated by operating system."
  },
  {
    "q_id": 16,
    "q_title": "Transient operating system code is a code that ____________",
    "q_options": [
      "stays in the memory always",
      "never enters the memory space",
      "comes and goes as needed",
      "is not easily accessible"
    ],
    "q_ans": "c",
    "q_explanation": "None."
  },
  {
    "q_id": 17,
    "q_title": "The portion of the process scheduler in an operating system that dispatches processes is concerned with ____________",
    "q_options": [
      "assigning ready processes to waiting queue",
      "assigning running processes to blocked queue",
      "assigning ready processes to CPU",
      "all of the mentioned"
    ],
    "q_ans": "c",
    "q_explanation": "None."
  },
  {
    "q_id": 18,
    "q_title": "The FCFS algorithm is particularly troublesome for ____________",
    "q_options": [
      "operating systems",
      "multiprocessor systems",
      "time sharing systems",
      "multiprogramming systems"
    ],
    "q_ans": "c",
    "q_explanation": "In a time sharing system, each user needs to get a share of the CPU at regular intervals."
  },
  {
    "q_id": 19,
    "q_title": "For an effective operating system, when to check for deadlock?",
    "q_options": [
      "every time a resource request is made at fixed time intervals",
      "at fixed time intervals",
      "every time a resource request is made",
      "none of the mentioned"
    ],
    "q_ans": "a",
    "q_explanation": "In an effective operating system, we must verify the deadlock each time a request for resources is made at fixed time intervals."
  },
  {
    "q_id": 20,
    "q_title": "A deadlock avoidance algorithm dynamically examines the __________ to ensure that a circular wait condition can never exist.",
    "q_options": [
      "operating system",
      "resources",
      "system storage state",
      "resource allocation state"
    ],
    "q_ans": "d",
    "q_explanation": "Resource allocation states are used to maintain the availability of the already and current available resources."
  }
]
